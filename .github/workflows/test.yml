#test
name: SQL Changes
env:
            
           ENVIRONMENT_DS: main
           ENVIRONMENT_CM: INT
           CHANGE_HISTORY_TABLE: AIGI_EDR_DATASTORE_DEMO.UTILITY.CHANGE_HISTORY
           DEPLOYMENT_SCRIPT_FOLDER: "ChangeScript/"
on:
  push:
     branches: [ main ] 
  pull_request:
     branches: [ main ] 
                          

jobs: 
   build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
           with:
             fetch-depth: 0
      - name: Extract GIT Details
        id: git_details
        run: |
           merge_commit=`git log | head -n 1 | cut -d " " -f2`
           previous_commit=`git rev-list --parents -n 1 ${merge_commit} | cut -d " " -f2`
           echo ::set-output name=merge_commit::$(git log | head -n 1 | cut -d " " -f2 )
           #echo git log | head -n 1 | cut -d " " -f2 
           #echo git rev-list --parents -n 1 ${merge_commit} | cut -d ' ' -f2 
           echo ::set-output name=previous_commit::$(git rev-list --parents -n 1 ${merge_commit} | cut -d " " -f2 )
           #echo ${merge_commit}
           echo ::set-output name=comments::$(git log --pretty=format:"%s" | head -n1)
           echo "::set-output name=branch_name::$(echo ${GITHUB_REF#refs/heads/})"
      - name: Modified Files
        id: files
        run: |
            git diff-tree -r --no-commit-id --name-only --diff-filter=ACMRT ${{ steps.git_details.outputs.previous_commit }} ${{ steps.git_details.outputs.merge_commit }} | sed 's/:/\t/g' | cut -f 2 | grep $DEPLOYMENT_SCRIPT_FOLDER | sort -n > changed_file_list.txt
            cat changed_file_list.txt
